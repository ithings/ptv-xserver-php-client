<?php
/**
 * HighPerformanceRoutingNetworkProgressStatus
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ithings\ptvxserver\model;
use \ithings\ptvxserver\ObjectSerializer;

/**
 * HighPerformanceRoutingNetworkProgressStatus Class Doc Comment
 *
 * @category Class
 * @description Possible status values for the progress of a running high-performance routing network calculation.    * &#x60;PREPROCESSING&#x60; - Indicates that some tasks have to be done before generating the high-performance routing network. The actual progress of this state is available in HighPerformanceRoutingNetworkProgress.progress.    * &#x60;GENERATING_NETWORK&#x60; - Indicates the generation of the high-performance routing network is ongoing. The actual progress of this state is available in HighPerformanceRoutingNetworkProgress.progress.    * &#x60;DONE&#x60; - Indicates that the generation of the high-performance routing network is finished.  Hint: Corresponding enum in xServer API documentation - com.ptvgroup.xserver.xdata.HighPerformanceRoutingNetworkProgressStatus
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class HighPerformanceRoutingNetworkProgressStatus
{
    /**
     * Possible values of this enum
     */
    const PREPROCESSING = 'PREPROCESSING';
const GENERATING_NETWORK = 'GENERATING_NETWORK';
const DONE = 'DONE';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::PREPROCESSING,
self::GENERATING_NETWORK,
self::DONE,        ];
    }
}
