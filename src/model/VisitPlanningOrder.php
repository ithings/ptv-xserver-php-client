<?php
/**
 * VisitPlanningOrder
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ithings\ptvxserver\model;

use \ArrayAccess;
use \ithings\ptvxserver\ObjectSerializer;

/**
 * VisitPlanningOrder Class Doc Comment
 *
 * @category Class
 * @description Represents an order for the visit planning use case. Hint: Corresponding type in xServer API documentation - com.ptvgroup.xserver.xcluster.VisitOrder
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class VisitPlanningOrder implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'VisitPlanningOrder';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
'location_id' => 'string',
'visit_rhythm_in_weeks' => '\ithings\ptvxserver\model\PositiveInteger',
'number_of_visits_per_week' => '\ithings\ptvxserver\model\PositiveInteger',
'visit_pattern_options' => '\ithings\ptvxserver\model\VisitPatternOptions',
'week_of_possible_first_visit' => '\ithings\ptvxserver\model\PositiveInteger',
'week_of_possible_last_visit' => '\ithings\ptvxserver\model\PositiveInteger',
'service_times' => '\ithings\ptvxserver\model\Duration[]',
'score' => '\ithings\ptvxserver\model\PositiveInteger'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'location_id' => null,
'visit_rhythm_in_weeks' => null,
'number_of_visits_per_week' => null,
'visit_pattern_options' => null,
'week_of_possible_first_visit' => null,
'week_of_possible_last_visit' => null,
'service_times' => null,
'score' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'location_id' => 'locationId',
'visit_rhythm_in_weeks' => 'visitRhythmInWeeks',
'number_of_visits_per_week' => 'numberOfVisitsPerWeek',
'visit_pattern_options' => 'visitPatternOptions',
'week_of_possible_first_visit' => 'weekOfPossibleFirstVisit',
'week_of_possible_last_visit' => 'weekOfPossibleLastVisit',
'service_times' => 'serviceTimes',
'score' => 'score'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'location_id' => 'setLocationId',
'visit_rhythm_in_weeks' => 'setVisitRhythmInWeeks',
'number_of_visits_per_week' => 'setNumberOfVisitsPerWeek',
'visit_pattern_options' => 'setVisitPatternOptions',
'week_of_possible_first_visit' => 'setWeekOfPossibleFirstVisit',
'week_of_possible_last_visit' => 'setWeekOfPossibleLastVisit',
'service_times' => 'setServiceTimes',
'score' => 'setScore'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'location_id' => 'getLocationId',
'visit_rhythm_in_weeks' => 'getVisitRhythmInWeeks',
'number_of_visits_per_week' => 'getNumberOfVisitsPerWeek',
'visit_pattern_options' => 'getVisitPatternOptions',
'week_of_possible_first_visit' => 'getWeekOfPossibleFirstVisit',
'week_of_possible_last_visit' => 'getWeekOfPossibleLastVisit',
'service_times' => 'getServiceTimes',
'score' => 'getScore'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['location_id'] = isset($data['location_id']) ? $data['location_id'] : null;
        $this->container['visit_rhythm_in_weeks'] = isset($data['visit_rhythm_in_weeks']) ? $data['visit_rhythm_in_weeks'] : null;
        $this->container['number_of_visits_per_week'] = isset($data['number_of_visits_per_week']) ? $data['number_of_visits_per_week'] : null;
        $this->container['visit_pattern_options'] = isset($data['visit_pattern_options']) ? $data['visit_pattern_options'] : null;
        $this->container['week_of_possible_first_visit'] = isset($data['week_of_possible_first_visit']) ? $data['week_of_possible_first_visit'] : null;
        $this->container['week_of_possible_last_visit'] = isset($data['week_of_possible_last_visit']) ? $data['week_of_possible_last_visit'] : null;
        $this->container['service_times'] = isset($data['service_times']) ? $data['service_times'] : null;
        $this->container['score'] = isset($data['score']) ? $data['score'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['location_id'] === null) {
            $invalidProperties[] = "'location_id' can't be null";
        }
        if ($this->container['visit_rhythm_in_weeks'] === null) {
            $invalidProperties[] = "'visit_rhythm_in_weeks' can't be null";
        }
        if ($this->container['number_of_visits_per_week'] === null) {
            $invalidProperties[] = "'number_of_visits_per_week' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id The unique identifier of this order.
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets location_id
     *
     * @return string
     */
    public function getLocationId()
    {
        return $this->container['location_id'];
    }

    /**
     * Sets location_id
     *
     * @param string $location_id The unique identifier of the customer location that should be visited in this order.
     *
     * @return $this
     */
    public function setLocationId($location_id)
    {
        $this->container['location_id'] = $location_id;

        return $this;
    }

    /**
     * Gets visit_rhythm_in_weeks
     *
     * @return \ithings\ptvxserver\model\PositiveInteger
     */
    public function getVisitRhythmInWeeks()
    {
        return $this->container['visit_rhythm_in_weeks'];
    }

    /**
     * Sets visit_rhythm_in_weeks
     *
     * @param \ithings\ptvxserver\model\PositiveInteger $visit_rhythm_in_weeks visit_rhythm_in_weeks
     *
     * @return $this
     */
    public function setVisitRhythmInWeeks($visit_rhythm_in_weeks)
    {
        $this->container['visit_rhythm_in_weeks'] = $visit_rhythm_in_weeks;

        return $this;
    }

    /**
     * Gets number_of_visits_per_week
     *
     * @return \ithings\ptvxserver\model\PositiveInteger
     */
    public function getNumberOfVisitsPerWeek()
    {
        return $this->container['number_of_visits_per_week'];
    }

    /**
     * Sets number_of_visits_per_week
     *
     * @param \ithings\ptvxserver\model\PositiveInteger $number_of_visits_per_week number_of_visits_per_week
     *
     * @return $this
     */
    public function setNumberOfVisitsPerWeek($number_of_visits_per_week)
    {
        $this->container['number_of_visits_per_week'] = $number_of_visits_per_week;

        return $this;
    }

    /**
     * Gets visit_pattern_options
     *
     * @return \ithings\ptvxserver\model\VisitPatternOptions
     */
    public function getVisitPatternOptions()
    {
        return $this->container['visit_pattern_options'];
    }

    /**
     * Sets visit_pattern_options
     *
     * @param \ithings\ptvxserver\model\VisitPatternOptions $visit_pattern_options visit_pattern_options
     *
     * @return $this
     */
    public function setVisitPatternOptions($visit_pattern_options)
    {
        $this->container['visit_pattern_options'] = $visit_pattern_options;

        return $this;
    }

    /**
     * Gets week_of_possible_first_visit
     *
     * @return \ithings\ptvxserver\model\PositiveInteger
     */
    public function getWeekOfPossibleFirstVisit()
    {
        return $this->container['week_of_possible_first_visit'];
    }

    /**
     * Sets week_of_possible_first_visit
     *
     * @param \ithings\ptvxserver\model\PositiveInteger $week_of_possible_first_visit week_of_possible_first_visit
     *
     * @return $this
     */
    public function setWeekOfPossibleFirstVisit($week_of_possible_first_visit)
    {
        $this->container['week_of_possible_first_visit'] = $week_of_possible_first_visit;

        return $this;
    }

    /**
     * Gets week_of_possible_last_visit
     *
     * @return \ithings\ptvxserver\model\PositiveInteger
     */
    public function getWeekOfPossibleLastVisit()
    {
        return $this->container['week_of_possible_last_visit'];
    }

    /**
     * Sets week_of_possible_last_visit
     *
     * @param \ithings\ptvxserver\model\PositiveInteger $week_of_possible_last_visit week_of_possible_last_visit
     *
     * @return $this
     */
    public function setWeekOfPossibleLastVisit($week_of_possible_last_visit)
    {
        $this->container['week_of_possible_last_visit'] = $week_of_possible_last_visit;

        return $this;
    }

    /**
     * Gets service_times
     *
     * @return \ithings\ptvxserver\model\Duration[]
     */
    public function getServiceTimes()
    {
        return $this->container['service_times'];
    }

    /**
     * Sets service_times
     *
     * @param \ithings\ptvxserver\model\Duration[] $service_times service_times
     *
     * @return $this
     */
    public function setServiceTimes($service_times)
    {
        $this->container['service_times'] = $service_times;

        return $this;
    }

    /**
     * Gets score
     *
     * @return \ithings\ptvxserver\model\PositiveInteger
     */
    public function getScore()
    {
        return $this->container['score'];
    }

    /**
     * Sets score
     *
     * @param \ithings\ptvxserver\model\PositiveInteger $score score
     *
     * @return $this
     */
    public function setScore($score)
    {
        $this->container['score'] = $score;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
