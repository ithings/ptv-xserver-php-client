<?php
/**
 * TourEventType
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ithings\ptvxserver\model;
use \ithings\ptvxserver\ObjectSerializer;

/**
 * TourEventType Class Doc Comment
 *
 * @category Class
 * @description Specifies the type of a tour event. In xRoute, only the following events are returned: SERVICE, WAITING, BREAK, DAILY\\_REST. In xTour, all the events are returned.    * &#x60;DRIVING&#x60; - Indicates a driving period.    * &#x60;SERVICE&#x60; - Indicates a service period.    * &#x60;WAITING&#x60; - Indicates a waiting period.    * &#x60;BREAK&#x60; - Indicates a break period.    * &#x60;DAILY_REST&#x60; - Indicates a daily rest period.    * &#x60;TRIP_START&#x60; - Indicates the start of a trip.    * &#x60;TRIP_END&#x60; - Indicates the end of a trip.    * &#x60;TOUR_START&#x60; - Indicates the start of a tour.    * &#x60;TOUR_END&#x60; - Indicates the end of a tour.  Hint: Corresponding enum in xServer API documentation - com.ptvgroup.xserver.tourplanning.TourEventType
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TourEventType
{
    /**
     * Possible values of this enum
     */
    const DRIVING = 'DRIVING';
const SERVICE = 'SERVICE';
const WAITING = 'WAITING';
const _BREAK = 'BREAK';
const DAILY_REST = 'DAILY_REST';
const TRIP_START = 'TRIP_START';
const TRIP_END = 'TRIP_END';
const TOUR_START = 'TOUR_START';
const TOUR_END = 'TOUR_END';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::DRIVING,
self::SERVICE,
self::WAITING,
self::_BREAK,
self::DAILY_REST,
self::TRIP_START,
self::TRIP_END,
self::TOUR_START,
self::TOUR_END,        ];
    }
}
