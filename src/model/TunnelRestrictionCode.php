<?php
/**
 * TunnelRestrictionCode
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ithings\ptvxserver\model;
use \ithings\ptvxserver\ObjectSerializer;

/**
 * TunnelRestrictionCode Class Doc Comment
 *
 * @category Class
 * @description Defines the main tunnel restriction codes according to ADR (\&quot;European Agreement Concerning the International Carriage of Dangerous Goods by Road\&quot;). There are some more restriction codes that are a combination of the main codes where the actual restriction code depends on other parameters of the vehicle and its load. For example, the restriction code B/D is B for tank carriage and D for other carriage.    * &#x60;NONE&#x60; - No restrictions for the transport of dangerous goods.    * &#x60;B&#x60; - Passage forbidden through tunnels of category B, C, D and E.    * &#x60;C&#x60; - Passage forbidden through tunnels of category C, D and E.    * &#x60;D&#x60; - Passage forbidden through tunnels of category D and E.    * &#x60;E&#x60; - Passage forbidden through tunnels of category E.  Hint: Corresponding enum in xServer API documentation - com.ptvgroup.xserver.vehicleprofile.TunnelRestrictionCode
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class TunnelRestrictionCode
{
    /**
     * Possible values of this enum
     */
    const NONE = 'NONE';
const B = 'B';
const C = 'C';
const D = 'D';
const E = 'E';
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::NONE,
self::B,
self::C,
self::D,
self::E,        ];
    }
}
