<?php
/**
 * RouteCalculationCriteriaTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace ithings\ptvxserver;

/**
 * RouteCalculationCriteriaTest Class Doc Comment
 *
 * @category    Class
 * @description Specifies what the routing algorithm should optimize for.    * &#x60;ABSTRACT_COSTS&#x60; - Calculate the route according to the best abstract costs based on distance time weighting and penalties.    * &#x60;MONETARY_COSTS&#x60; - Calculate the route according to the best monetary costs based on the parameters in the monetary cost options and including toll costs.    If set, it is required to specify a currency in the route options.  Hint: Corresponding enum in xServer API documentation - com.ptvgroup.xserver.routing.RouteCalculationCriteria
 * @package     ithings\ptvxserver
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class RouteCalculationCriteriaTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "RouteCalculationCriteria"
     */
    public function testRouteCalculationCriteria()
    {
    }
}
