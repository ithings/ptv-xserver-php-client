<?php
/**
 * LegTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.0 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * LegTest Class Doc Comment
 *
 * @category    Class
 * @description A leg is defined by a start- and an end-waypoint and the segment (s) between them. It is guaranteed that a leg consists of at least one segment. It is also guaranteed that the leg of index *n* connects waypoints of indices *n* and *n+1*, i.e. the number of response waypoints equals the number of the list of legs plus 1. Hint: Corresponding type in xServer API documentation - com.ptvgroup.xserver.xroute.Leg
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class LegTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Leg"
     */
    public function testLeg()
    {
    }

    /**
     * Test attribute "start_waypoint_name"
     */
    public function testPropertyStartWaypointName()
    {
    }

    /**
     * Test attribute "end_waypoint_name"
     */
    public function testPropertyEndWaypointName()
    {
    }

    /**
     * Test attribute "start_segment_index"
     */
    public function testPropertyStartSegmentIndex()
    {
    }

    /**
     * Test attribute "end_segment_index"
     */
    public function testPropertyEndSegmentIndex()
    {
    }

    /**
     * Test attribute "start_node_index"
     */
    public function testPropertyStartNodeIndex()
    {
    }

    /**
     * Test attribute "end_node_index"
     */
    public function testPropertyEndNodeIndex()
    {
    }

    /**
     * Test attribute "start_toll_section_index"
     */
    public function testPropertyStartTollSectionIndex()
    {
    }

    /**
     * Test attribute "end_toll_section_index"
     */
    public function testPropertyEndTollSectionIndex()
    {
    }

    /**
     * Test attribute "distance"
     */
    public function testPropertyDistance()
    {
    }

    /**
     * Test attribute "travel_time"
     */
    public function testPropertyTravelTime()
    {
    }

    /**
     * Test attribute "traffic_delay"
     */
    public function testPropertyTrafficDelay()
    {
    }

    /**
     * Test attribute "toll_summary"
     */
    public function testPropertyTollSummary()
    {
    }

    /**
     * Test attribute "emissions"
     */
    public function testPropertyEmissions()
    {
    }

    /**
     * Test attribute "polyline"
     */
    public function testPropertyPolyline()
    {
    }

    /**
     * Test attribute "violated"
     */
    public function testPropertyViolated()
    {
    }
}
