<?php
/**
 * EmissionValuesEN162582012
 *
 * PHP version 5
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * xServer
 *
 * PTV xServer 2.26.1 - 2.26 API document
 *
 * OpenAPI spec version: 2.26
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace ithings\ptvxserver\model;
use \ithings\ptvxserver\ObjectSerializer;

/**
 * EmissionValuesEN162582012 Class Doc Comment
 *
 * @category Class
 * @package  ithings\ptvxserver
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EmissionValuesEN162582012 extends EmissionValues 
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EmissionValues_EN16258_2012';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'value_scenario_type' => '\ithings\ptvxserver\model\EmissionValueScenarioTypeEN162582012',
'fuel_consumption' => '\ithings\ptvxserver\model\Kilograms',
'energy_use_tank_to_wheel' => '\ithings\ptvxserver\model\Energy',
'energy_use_well_to_wheel' => '\ithings\ptvxserver\model\Energy',
'co2e_tank_to_wheel' => '\ithings\ptvxserver\model\Kilograms',
'co2e_well_to_wheel' => '\ithings\ptvxserver\model\Kilograms'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'value_scenario_type' => null,
'fuel_consumption' => null,
'energy_use_tank_to_wheel' => null,
'energy_use_well_to_wheel' => null,
'co2e_tank_to_wheel' => null,
'co2e_well_to_wheel' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes + parent::swaggerTypes();
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats + parent::swaggerFormats();
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'value_scenario_type' => 'valueScenarioType',
'fuel_consumption' => 'fuelConsumption',
'energy_use_tank_to_wheel' => 'energyUseTankToWheel',
'energy_use_well_to_wheel' => 'energyUseWellToWheel',
'co2e_tank_to_wheel' => 'co2eTankToWheel',
'co2e_well_to_wheel' => 'co2eWellToWheel'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'value_scenario_type' => 'setValueScenarioType',
'fuel_consumption' => 'setFuelConsumption',
'energy_use_tank_to_wheel' => 'setEnergyUseTankToWheel',
'energy_use_well_to_wheel' => 'setEnergyUseWellToWheel',
'co2e_tank_to_wheel' => 'setCo2eTankToWheel',
'co2e_well_to_wheel' => 'setCo2eWellToWheel'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'value_scenario_type' => 'getValueScenarioType',
'fuel_consumption' => 'getFuelConsumption',
'energy_use_tank_to_wheel' => 'getEnergyUseTankToWheel',
'energy_use_well_to_wheel' => 'getEnergyUseWellToWheel',
'co2e_tank_to_wheel' => 'getCo2eTankToWheel',
'co2e_well_to_wheel' => 'getCo2eWellToWheel'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return parent::attributeMap() + self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return parent::setters() + self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return parent::getters() + self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    


    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        parent::__construct($data);

        $this->container['value_scenario_type'] = isset($data['value_scenario_type']) ? $data['value_scenario_type'] : null;
        $this->container['fuel_consumption'] = isset($data['fuel_consumption']) ? $data['fuel_consumption'] : null;
        $this->container['energy_use_tank_to_wheel'] = isset($data['energy_use_tank_to_wheel']) ? $data['energy_use_tank_to_wheel'] : null;
        $this->container['energy_use_well_to_wheel'] = isset($data['energy_use_well_to_wheel']) ? $data['energy_use_well_to_wheel'] : null;
        $this->container['co2e_tank_to_wheel'] = isset($data['co2e_tank_to_wheel']) ? $data['co2e_tank_to_wheel'] : null;
        $this->container['co2e_well_to_wheel'] = isset($data['co2e_well_to_wheel']) ? $data['co2e_well_to_wheel'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = parent::listInvalidProperties();

        if ($this->container['value_scenario_type'] === null) {
            $invalidProperties[] = "'value_scenario_type' can't be null";
        }
        if ($this->container['fuel_consumption'] === null) {
            $invalidProperties[] = "'fuel_consumption' can't be null";
        }
        if ($this->container['energy_use_tank_to_wheel'] === null) {
            $invalidProperties[] = "'energy_use_tank_to_wheel' can't be null";
        }
        if ($this->container['energy_use_well_to_wheel'] === null) {
            $invalidProperties[] = "'energy_use_well_to_wheel' can't be null";
        }
        if ($this->container['co2e_tank_to_wheel'] === null) {
            $invalidProperties[] = "'co2e_tank_to_wheel' can't be null";
        }
        if ($this->container['co2e_well_to_wheel'] === null) {
            $invalidProperties[] = "'co2e_well_to_wheel' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets value_scenario_type
     *
     * @return \ithings\ptvxserver\model\EmissionValueScenarioTypeEN162582012
     */
    public function getValueScenarioType()
    {
        return $this->container['value_scenario_type'];
    }

    /**
     * Sets value_scenario_type
     *
     * @param \ithings\ptvxserver\model\EmissionValueScenarioTypeEN162582012 $value_scenario_type value_scenario_type
     *
     * @return $this
     */
    public function setValueScenarioType($value_scenario_type)
    {
        $this->container['value_scenario_type'] = $value_scenario_type;

        return $this;
    }

    /**
     * Gets fuel_consumption
     *
     * @return \ithings\ptvxserver\model\Kilograms
     */
    public function getFuelConsumption()
    {
        return $this->container['fuel_consumption'];
    }

    /**
     * Sets fuel_consumption
     *
     * @param \ithings\ptvxserver\model\Kilograms $fuel_consumption fuel_consumption
     *
     * @return $this
     */
    public function setFuelConsumption($fuel_consumption)
    {
        $this->container['fuel_consumption'] = $fuel_consumption;

        return $this;
    }

    /**
     * Gets energy_use_tank_to_wheel
     *
     * @return \ithings\ptvxserver\model\Energy
     */
    public function getEnergyUseTankToWheel()
    {
        return $this->container['energy_use_tank_to_wheel'];
    }

    /**
     * Sets energy_use_tank_to_wheel
     *
     * @param \ithings\ptvxserver\model\Energy $energy_use_tank_to_wheel energy_use_tank_to_wheel
     *
     * @return $this
     */
    public function setEnergyUseTankToWheel($energy_use_tank_to_wheel)
    {
        $this->container['energy_use_tank_to_wheel'] = $energy_use_tank_to_wheel;

        return $this;
    }

    /**
     * Gets energy_use_well_to_wheel
     *
     * @return \ithings\ptvxserver\model\Energy
     */
    public function getEnergyUseWellToWheel()
    {
        return $this->container['energy_use_well_to_wheel'];
    }

    /**
     * Sets energy_use_well_to_wheel
     *
     * @param \ithings\ptvxserver\model\Energy $energy_use_well_to_wheel energy_use_well_to_wheel
     *
     * @return $this
     */
    public function setEnergyUseWellToWheel($energy_use_well_to_wheel)
    {
        $this->container['energy_use_well_to_wheel'] = $energy_use_well_to_wheel;

        return $this;
    }

    /**
     * Gets co2e_tank_to_wheel
     *
     * @return \ithings\ptvxserver\model\Kilograms
     */
    public function getCo2eTankToWheel()
    {
        return $this->container['co2e_tank_to_wheel'];
    }

    /**
     * Sets co2e_tank_to_wheel
     *
     * @param \ithings\ptvxserver\model\Kilograms $co2e_tank_to_wheel co2e_tank_to_wheel
     *
     * @return $this
     */
    public function setCo2eTankToWheel($co2e_tank_to_wheel)
    {
        $this->container['co2e_tank_to_wheel'] = $co2e_tank_to_wheel;

        return $this;
    }

    /**
     * Gets co2e_well_to_wheel
     *
     * @return \ithings\ptvxserver\model\Kilograms
     */
    public function getCo2eWellToWheel()
    {
        return $this->container['co2e_well_to_wheel'];
    }

    /**
     * Sets co2e_well_to_wheel
     *
     * @param \ithings\ptvxserver\model\Kilograms $co2e_well_to_wheel co2e_well_to_wheel
     *
     * @return $this
     */
    public function setCo2eWellToWheel($co2e_well_to_wheel)
    {
        $this->container['co2e_well_to_wheel'] = $co2e_well_to_wheel;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
